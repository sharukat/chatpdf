"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/use-generate.tsx":
/*!************************************!*\
  !*** ./src/hooks/use-generate.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAnswerGeneration: function() { return /* binding */ useAnswerGeneration; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ai */ \"(app-pages-browser)/./node_modules/ai/dist/index.mjs\");\n/* harmony import */ var _ai_sdk_groq__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ai-sdk/groq */ \"(app-pages-browser)/./node_modules/@ai-sdk/groq/dist/index.mjs\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\nvar _s = $RefreshSig$();\n\n\n\n\n\nconst delay = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\nconst useAnswerGeneration = ()=>{\n    _s();\n    const groq = (0,_ai_sdk_groq__WEBPACK_IMPORTED_MODULE_2__.createGroq)({\n        apiKey: \"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\"\n    });\n    const model = groq(\"deepseek-r1-distill-llama-70b\");\n    const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [historyIds, setHistoryIds] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set());\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [history, setHistory] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const messagesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        messagesRef.current = messages;\n    }, [\n        messages\n    ]);\n    const generateText = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (currentMessages)=>{\n        setIsLoading(true);\n        const lastMessage = currentMessages[currentMessages.length - 1].content;\n        console.log(lastMessage);\n        try {\n            const context_response = await fetch(\"\".concat(\"http://130.63.65.112:5328\", \"/api/getdocuments\"), {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    question: lastMessage\n                })\n            });\n            const data = await context_response.json();\n            let context = \"No relevant context found.\";\n            if (data.response) {\n                context = data.response;\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Retrieval Successful\");\n                console.log(context);\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Received invalid response format from server\");\n            }\n            const response = (0,ai__WEBPACK_IMPORTED_MODULE_3__.streamText)({\n                model: model,\n                temperature: 0,\n                maxRetries: 5,\n                system: \"You are an expert in question answering.\\n                     First, analyze the question carefully and think step by step.\\n                     Provide accurate, factual answers based only on the context information.\\n                     If unsure about any details, clearly state that information might be inaccurate.\",\n                prompt: \"Current conversation:\\n                \".concat(messages, \"\\n\\n                Context:\\n                \").concat(context, \"\\n                \\n                Question:\\n                \").concat(lastMessage)\n            });\n            const assistantMessage = {\n                role: \"assistant\",\n                content: \"\"\n            };\n            setMessages((prev)=>[\n                    ...prev,\n                    assistantMessage\n                ]);\n            let fullResponse = \"\";\n            let thinkBuffer = \"\";\n            let hasPassedThinkTag = false;\n            for await (const chunk of response.textStream){\n                if (!hasPassedThinkTag) {\n                    thinkBuffer += chunk;\n                    const tagIndex = thinkBuffer.indexOf(\"</think>\");\n                    if (tagIndex !== -1) {\n                        // Extract content after the </think> tag\n                        const contentAfterTag = thinkBuffer.slice(tagIndex + \"</think>\".length);\n                        fullResponse += contentAfterTag;\n                        hasPassedThinkTag = true;\n                        // Update messages with the initial content after the tag\n                        setMessages((prev)=>{\n                            const newMessages = [\n                                ...prev\n                            ];\n                            const lastMsg = newMessages[newMessages.length - 1];\n                            lastMsg.content = fullResponse;\n                            return newMessages;\n                        });\n                    }\n                } else {\n                    // Continue streaming normally after the </think> tag\n                    fullResponse += chunk;\n                    await delay(30);\n                    setMessages((prev)=>{\n                        const newMessages = [\n                            ...prev\n                        ];\n                        const lastMsg = newMessages[newMessages.length - 1];\n                        lastMsg.content = fullResponse;\n                        return newMessages;\n                    });\n                }\n            }\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Answer Generation Successful\");\n        } catch (error) {\n            console.error(\"Submission error:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Failed to get response from server\");\n        } finally{\n            setIsLoading(false);\n            setInput(\"\");\n        }\n    }, [\n        model\n    ]);\n    const addToHistory = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((activeChatId)=>{\n        if (!historyIds.has(activeChatId)) {\n            const timestamp = Date.now();\n            const id = (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n            const messagesItem = {\n                id,\n                input: messagesRef.current[messagesRef.current.length - 2].content,\n                timestamp,\n                messages: messagesRef.current\n            };\n            setHistory((prevHistory)=>[\n                    ...prevHistory,\n                    messagesItem\n                ]);\n            setHistoryIds((prevIds)=>{\n                const newSet = new Set(prevIds);\n                newSet.add(id);\n                return newSet;\n            });\n        }\n        setMessages([]);\n    }, [\n        historyIds,\n        history\n    ]);\n    const updateHistory = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((activeChatId)=>{\n        const index = history.findIndex((item)=>item.id === activeChatId);\n        setHistory((prevHistory)=>{\n            const updatedHistory = [\n                ...prevHistory\n            ];\n            updatedHistory[index] = {\n                ...updatedHistory[index],\n                input: messagesRef.current[messagesRef.current.length - 2].content,\n                messages: messagesRef.current,\n                timestamp: Date.now()\n            };\n            return updatedHistory;\n        });\n    }, [\n        history\n    ]);\n    return {\n        input,\n        setInput,\n        messages,\n        setMessages,\n        messagesRef,\n        isLoading,\n        setIsLoading,\n        generateText,\n        history,\n        addToHistory,\n        updateHistory,\n        historyIds\n    };\n};\n_s(useAnswerGeneration, \"YrMqoPKuea11BL5QnaeZtNJuQ44=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/use-generate.tsx\n"));

/***/ })

});